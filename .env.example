# Zebric Runtime Environment Configuration
# Copy this file to .env and configure for your environment

# =============================================================================
# Database Configuration
# =============================================================================

# Database provider: "sqlite" | "postgres"
DATABASE_PROVIDER=sqlite

# SQLite Configuration (for development)
DATABASE_URL=file:./data/app.db

# PostgreSQL Configuration (for production)
# DATABASE_URL=postgresql://user:password@localhost:5432/task_tracker_db
# DATABASE_POOL_MIN=2
# DATABASE_POOL_MAX=10
# DATABASE_IDLE_TIMEOUT=30000

# =============================================================================
# Redis Configuration (for production workflows and caching)
# =============================================================================

# Redis connection URL
# REDIS_URL=redis://localhost:6379
# REDIS_PASSWORD=
# REDIS_TLS=false

# =============================================================================
# BullMQ Queue Configuration
# =============================================================================

# Enable background job processing
# ENABLE_WORKFLOWS=true
# QUEUE_CONCURRENCY=5
# QUEUE_PREFIX=zebric:

# =============================================================================
# Better Auth Configuration
# =============================================================================

# Auth secret for session signing (generate with: openssl rand -base64 32)
AUTH_SECRET=changeme_use_openssl_rand_base64_32

# Auth session duration (in seconds, default: 7 days)
AUTH_SESSION_DURATION=604800

# Auth idle timeout (in seconds, default: 24 hours)
AUTH_IDLE_TIMEOUT=86400

# Base URL for auth callbacks
BASE_URL=http://localhost:3000

# OAuth Provider Configuration (optional)
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=
# GITHUB_CLIENT_ID=
# GITHUB_CLIENT_SECRET=

# =============================================================================
# Server Configuration
# =============================================================================

# Server port
PORT=3000

# Server host
HOST=0.0.0.0

# Node environment: "development" | "production" | "test"
NODE_ENV=development

# Enable CORS (comma-separated origins)
# CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# =============================================================================
# Security Configuration
# =============================================================================

# Rate limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=60000

# Request body size limit (in bytes)
BODY_LIMIT=1048576

# CSRF protection
# CSRF_COOKIE_NAME=_csrf
# CSRF_SECRET=changeme_use_openssl_rand_base64_32

# =============================================================================
# Hot Reload Configuration (development only)
# =============================================================================

# Enable hot reload
HOT_RELOAD=true

# Hot reload server port
HOT_RELOAD_PORT=3001

# =============================================================================
# Monitoring & Logging
# =============================================================================

# Log level: "debug" | "info" | "warn" | "error"
LOG_LEVEL=info

# Enable audit logging
AUDIT_LOGGING=true

# Enable metrics collection
ENABLE_METRICS=true

# Metrics port (Prometheus-compatible)
# METRICS_PORT=9090

# =============================================================================
# Plugin Configuration
# =============================================================================

# Plugin sandbox timeout (in milliseconds)
PLUGIN_TIMEOUT=5000

# Maximum plugin memory (in MB)
PLUGIN_MAX_MEMORY=128

# =============================================================================
# Workflow Configuration
# =============================================================================

# HTTP client timeout for webhook steps (in milliseconds)
WORKFLOW_HTTP_TIMEOUT=30000

# Maximum workflow execution time (in milliseconds)
WORKFLOW_MAX_EXECUTION_TIME=300000

# =============================================================================
# Feature Flags
# =============================================================================

# Enable experimental features
# ENABLE_FIELD_LEVEL_ACCESS=false
# ENABLE_INCREMENTAL_MIGRATION=false
